.. _first_steps_tut:

First Steps Tutorial
==============================



Covered Topics
-----------------------
     
Covered in this tutorial:

* Verify that openEMS is correctly installed

* Verify that the Matlab/Octave/Python scripts are working



Prerequisites
-----------------------

* openEMS, as well as either Matlab/Octave or Python are installed

	* Matlab/Octave: :ref:`see here <install_matlaboctave>`
	
	* Python: :ref:`see here <install_python>`


Instructions
-----------------------

openEMS executable
^^^^^^^^^^^^^^^^^^^^

Linux
"""""""""""""

1. open a shell

2. change the current folder to the openEMS installation directory, e.g.

	.. code-block:: bash
    
		cd ~/opt/openEMS

3. invoke the openEMS solver
	
	.. code-block:: bash
    
		./openEMS

	* The output should be similar to:

		.. code-block:: console

			---------------------------------------------------------------------- 
			| openEMS 64bit -- version v0.0.33
			| (C) 2010-2015 Thorsten Liebig <thorsten.liebig@gmx.de>  GPL license
			---------------------------------------------------------------------- 

		Otherwise, check the :ref:`install instructions <install_openems_linux>`


Windows
""""""""""""""""""""

1. open a command prompt window

	* click *Start*-button, type "cmd"

2. change the current folder to the openEMS installation directory, e.g.

	.. code-block:: console
    
		cd C:\openEMS

3. invoke the openEMS solver
	
	.. code-block:: console
    
		openEMS

	* The output should be similar to:

		.. code-block:: console

			 -------------------------------------------------------------------- 
			 | openEMS 32bit -- version v0.0.23
			 | (C) 2010 Thorsten Liebig <thorsten.liebig@gmx.de>  GPL license
			 --------------------------------------------------------------------

		Otherwise, check the :ref:`install instructions <install_openems_windows>`



Scripting Interface
^^^^^^^^^^^^^^^^^^^^^^^^

Matlab/Octave
"""""""""""""""""""""""

OpenEMS needs an .xml-file to start the simulation. This file is normally generated by Matlab/Octave.

1. Start *Matlab* or *Octave*

2. Check if the *CSXCAD* interface functions are available, type the following into the command window and compare the output:

	.. code-block:: matlab
		
		>> InitCSX
		
		ans = 

			Properties: []

	* If an error message states that *InitCSX* is undefined, you need to have another look at the :ref:`install instructions <install_matlaboctave>`

3. Check if the *openEMS* interface functions are available:

	.. code-block:: matlab
		
		>> InitFDTD('NrTS', 0, 'EndCriteria', 0)

		ans = 

			ATTRIBUTE: [1x1 struct]

	* If instead an error message states that *InitFDTD* is undefined, you need to have another look at the :ref:`install instructions <install_matlaboctave>`

4. Try to start the simulator from our Matlab environment:

	.. code-block:: matlab
		
		>> RunOpenEMS( '.', 'nonexistant.xml', '' )
		[...]
		Read openEMS xml file: nonexistant.xml ...
		openEMS: Error File-Loading failed!!! File: nonexistant.xml

	* Although it presents an error message, the call itself was successful. Matlab/Octave is able to find the simulator executable and start it with the name of the xml-file.

	* If instead an error message states that *RunOpenEMS* is undefined, you need to have another look at the :ref:`install instructions <install_matlaboctave>`



Python
"""""""""""""""""""""""""

.. todo::
	
	Add Python instructions



AppCSXCAD executable
^^^^^^^^^^^^^^^^^^^^^^^

The *AppCSXCAD* application graphically displays the structure built within the Matlab/Octave environment. It is very useful to visualize the computational area and helps to find errors in the geometrical definition of the structure.


Matlab/Octave
"""""""""""""""

1. Start *Matlab* or *Octave*

2. Start *AppCSXCAD* from *Matlab*:

	.. code-block:: matlab
		
		CSXGeomPlot('nonexistant.xml')

3. The main window should be displayed (refer to the screenshot below), and a dialog box should appear, telling you that the file *nonexistant.xml* cannot be opened. That proves that Matlab/Octave is able to run AppCSXCAD

	* If instead an error message states that *CSXGeomPlot* is undefined, you need to have another look at the :ref:`install instructions <install_matlaboctave>`

.. figure:: images/AppCSXCAD_screenshot1.png
	:alt: AppCSXCAD screenshot
	
	Screenshot of the AppCSXCAD main window



Python
""""""""""""""

.. todo::
	
	Add Python instructions

